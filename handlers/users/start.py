from aiogram import types, F
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.filters.state import StateFilter
from aiogram.types import CallbackQuery

from keyboards.default import lang, create_menu_buttons
from keyboards.inline import create_back_button
from loader import dp, db

buttons_uz = ['üè¢ Kompaniya haqida ma\'lumot', "‚öí Xizmatlar va mahsulotlar",
              "üì∞ Yangiliklar va yangilanishlar", "üìà Investorlar uchun bo'lim",
              "üßæ Hamkorlar uchun bo'lim", "üìû Aloqa ma'lumotlari", "‚ùì FAQ", "üåê Tilni ozgartirish"]
buttons_ru = ['üè¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏', "‚öí –£—Å–ª—É–≥–∏ –∏ –ø—Ä–æ–¥—É–∫—Ç—ã",
              "üì∞ –ù–æ–≤–æ—Å—Ç–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", "üìà –†–∞–∑–¥–µ–ª –¥–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤",
              "üßæ –†–∞–∑–¥–µ–ª –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤", "üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã", "üåê –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫"]


@dp.message(CommandStart())
async def bot_start(message: types.Message, state: FSMContext):
    user = await db.get_user_from_id(message.from_user.id)

    if user:
        language = user[0]
        TEXTS = {
            'uz': "Pastdagi kerakli tugmachani bo'sing:",
            'ru': "–ù–∞–∂–º–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:"
        }
        await message.answer(TEXTS[language], reply_markup=await create_menu_buttons(language))

    else:
        await message.answer(f"Assalomu alaykum! Botimizga hush kelibsiz. Tilni tanlang.\n"
                             f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç. –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫", reply_markup=lang)
        await state.set_state("choose_lang")


@dp.message(StateFilter('choose_lang'))
async def send_buttons(msg: types.Message, state: FSMContext):
    if msg.text == "O'zbek tili":
        language = 'uz'
    else:
        language = 'ru'
    await db.add_tg_user(language, msg.from_user.id)
    TEXTS = {
        'uz': "Pastdagi kerakli tugmachani bo'sing:",
        'ru': "–ù–∞–∂–º–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:"
    }
    await msg.answer(TEXTS[language], reply_markup=await create_menu_buttons(language))
    await state.clear()


@dp.message(F.text == "üåê Tilni ozgartirish")
async def update_lang(msg: types.Message, state: FSMContext):
    await msg.answer("Tilni tanlang: ", reply_markup=lang)
    await state.set_state('change_lang')


@dp.message(StateFilter('change_lang'))
async def change_lang(msg: types.Message, state: FSMContext):
    user_id = msg.from_user.id
    if msg.text == "O'zbek tili":
        language = 'uz'
    else:
        language = 'ru'
    await db.update_user(language, user_id)
    TEXTS = {
        'uz': "Pastdagi kerakli tugmachani bo'sing:",
        'ru': "–ù–∞–∂–º–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:"
    }
    await msg.answer(TEXTS[language], reply_markup=await create_menu_buttons(language))
    await state.clear()


@dp.message(F.text == "üåê –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫")
async def update_lang(msg: types.Message, state: FSMContext):
    await msg.answer("–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫: ", reply_markup=lang)
    await state.set_state('change_lang')




