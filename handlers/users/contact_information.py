from aiogram import types
from keyboards.default import create_menu_buttons, create_contact_info_button
from loader import dp, db


@dp.message(lambda msg: msg.text in ["üìû Aloqa ma'lumotlari", "üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"])
async def send_contact_info(msg: types.Message):
    lang = 'uz' if msg.text == "üìû Aloqa ma'lumotlari" else 'ru'
    TEXTS = {
        'uz': "Pastdagi kerakli tugmachani bo'sing:",
        'ru': "–ù–∞–∂–º–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:"
    }
    await msg.answer(TEXTS[lang], reply_markup=await create_contact_info_button(lang))


@dp.message(lambda msg: msg.text in ["üè¢ Kompaniyaning manzili", "üè¢ –ê–¥—Ä–µ—Å –∫–æ–º–ø–∞–Ω–∏–∏"])
async def send_company_location(msg: types.Message):
    lang = 'uz' if msg.text == "üè¢ Kompaniyaning manzili" else 'ru'
    company_address = await db.get_company_location(lang)
    if company_address:
        TEXTS = {
            'uz': f"Kompaniyaning manzili: {company_address[0]}",
            'ru': f"–ê–¥—Ä–µ—Å –∫–æ–º–ø–∞–Ω–∏–∏: {company_address[0]}"
        }
        await msg.answer(TEXTS[lang])
    else:
        TEXTS = {
            'uz': "Kompaniyaning manzili topilmadi",
            'ru': "–ê–¥—Ä–µ—Å –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–µ –Ω–∞–∏ÃÜ–¥–µ–Ω"
        }
        await msg.answer(TEXTS[lang])


@dp.message(lambda msg: msg.text in ["üì≤ Kompaniyaning telefon raqamlari", "üì≤ –ù–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∫–æ–º–ø–∞–Ω–∏–∏"])
async def send_company_location(msg: types.Message):
    lang = 'uz' if msg.text == "üì≤ Kompaniyaning telefon raqamlari" else 'ru'
    company_contacts = await db.get_company_contact(lang)
    if company_contacts:
        TEXTS = {
            'uz': f"Kompaniyaning telefon raqamlari: {company_contacts[0]}",
            'ru': f"–ù–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∫–æ–º–ø–∞–Ω–∏–∏: {company_contacts[0]}"
        }
        await msg.answer(TEXTS[lang])
    else:
        TEXTS = {
            'uz': "Kompaniyaning telefon raqamlari topilmadi",
            'ru': "–ù–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–µ –Ω–∞–∏ÃÜ–¥–µ–Ω—ã"
        }
        await msg.answer(TEXTS[lang])


@dp.message(lambda msg: msg.text in ["üìß Kompaniyaning elektron manzili", "üìß –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –∫–æ–º–ø–∞–Ω–∏–∏"])
async def send_company_location(msg: types.Message):
    lang = 'uz' if msg.text == "üìß Kompaniyaning elektron manzili" else 'ru'
    company_email = await db.get_company_email(lang)
    if company_email:
        TEXTS = {
            'uz': f"Kompaniyaning elektron manzili: {company_email[0]}",
            'ru': f"–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –∫–æ–º–ø–∞–Ω–∏–∏: {company_email[0]}"
        }
        await msg.answer(TEXTS[lang])
    else:
        TEXTS = {
            'uz': "Kompaniyaning elektron manzili topilmadi",
            'ru': "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–µ –Ω–∞–∏ÃÜ–¥–µ–Ω–∞"
        }
        await msg.answer(TEXTS[lang])


@dp.message(lambda msg: msg.text in ["üåê Kompaniyaning ijtimoiy tarmoqlari", "üåê –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –∫–æ–º–ø–∞–Ω–∏–∏"])
async def send_company_location(msg: types.Message):
    lang = 'uz' if msg.text == "üåê Kompaniyaning ijtimoiy tarmoqlari" else 'ru'
    company_social_networks = await db.get_company_social_networks(lang)
    if company_social_networks:
        TEXTS = {
            'uz': f"Kompaniyaning ijtimoiy tarmoqlari: {company_social_networks[0]}",
            'ru': f"–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –∫–æ–º–ø–∞–Ω–∏–∏: {company_social_networks[0]}"
        }
        await msg.answer(TEXTS[lang])
    else:
        TEXTS = {
            'uz': "Kompaniyaning ijtimoiy tarmoqlari topilmadi",
            'ru': "–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–µ –Ω–∞–∏ÃÜ–¥–µ–Ω—ã"
        }
        await msg.answer(TEXTS[lang])


@dp.message(lambda msg: msg.text in ["üîô Qaytish", "üîô –ù–∞–∑–∞–¥"])
async def send_contact_info(msg: types.Message):
    lang = 'uz' if msg.text == "üîô Qaytish" else 'ru'
    TEXTS = {
        'uz': "Asosiy menyuga qaytdingiz:",
        'ru': "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é: "
    }
    await msg.answer(TEXTS[lang], reply_markup=await create_menu_buttons(lang))

